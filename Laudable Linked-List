#include<stdio.h>
#include<stdlib.h>

struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;


NODE * insert_start(NODE *start)
{
    NODE *newnode;
    newnode=(NODE *)malloc(sizeof(NODE));
    if(newnode==NULL)
    {
        printf("Memory full\n");
        return start;
    }
    printf("Enter node data\n");
    scanf("%d",&newnode->data);
    newnode->next=NULL;
    if(start==NULL)
        return newnode;
    else
    {
        newnode->next=start;
        return newnode;
    }
    /*OR
    if(start!=NULL)
        newnode->next=start;
    return newnode;
    */
}

NODE * insert_end(NODE *start)
{
    NODE *newnode;
    newnode=(NODE *)malloc(sizeof(NODE));
    if(newnode==NULL)
    {
        printf("Memory full\n");
        return start;
    }
    printf("Enter node data\n");
    scanf("%d",&newnode->data);
    newnode->next=NULL;

    if(start==NULL)
        return newnode;
    else
    {
        NODE *temp=start;
        while(temp->next!=NULL)
              temp=temp->next;
        temp->next=newnode;
        return start;
    }
}

NODE *delete_end(NODE *start)
{
    if(start==NULL)
    {
        printf("List empty\n");
        return start;
    }
    if(start->next==NULL)
    {
        free(start);
        return NULL;
    }
    NODE *curr=start,*prev=NULL;
    while(curr->next!=NULL)
    {
        prev=curr;
        curr=curr->next;
    }
    prev->next=NULL;
    free(curr);
    return start;
}

NODE *delete_start(NODE *start)
{
    NODE *temp;
    if(start==NULL)
    {
        printf("List is empty\n");
        return NULL;
    }
    temp=start;
    start=start->next;
    free(temp);
    return start;
}

void display(NODE *start)
{
    NODE *p;
    p=start;
    if(p==NULL)
        printf("List is empty\n");
    else
    {
        printf("List elements are: \n");
        for(p=start;p!=NULL;p=p->next)
        {
           printf("%d ",p->data);
        }
        printf("\n");
    }
}

int main()
{
    NODE *start;
    start=NULL;
    int choice;
    do
    {
        printf("1->Insert at start \n2->Insert at end\n3->Delete at start\n4->Delete at end\n5->Display list elements\n6->Exit\n");
        printf("Enter choice\n");
        scanf("%d",&choice);
        switch(choice)
        {
          case 1:
                 start=insert_start(start);
                 break;
          case 2:
                 start=insert_end(start);
                 break;
          case 3:
                 start=delete_start(start);
                 break;
          case 4:
                 start=delete_end(start);
                 break;
          case 5:
                 display(start);
                 break;
          case 6:
                break;
          default:
              printf("Enter the valid choice\n");
        }
    }while(choice!=6);
}
